name: Zenn Private Preview
description: Zennの記事・本の限定公開ページのビルド・デプロイ

inputs:
  cloudflare-account-id:
    description: CloudflareのアカウントID
    required: true

  cloudflare-api-token:
    description: CloudflareのAPIトークン
    required: true

  cloudflare-project-name:
    description: Cloudflare Pagesのプロジェクト名
    required: true

  enable-basic-auth:
    description: Enable basic auth
    required: true
    default: false

  basic-auth-username:
    description: Basic auth username
    required: false

  basic-auth-password:
    description: Basic auth password
    required: false

outputs:
  deployment-url:
    description: プレビューページのURL
    value: ${{ steps.echo-outputs.outputs.deployment-url }}

runs:
  using: composite
  steps:
    - name: Bunをセットアップ
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: asa1984/zenn-private-previewをクローン
      shell: bash
      run: git clone https://github.com/asa1984/zenn-private-preview

    - name: 依存関係をインストール
      shell: bash
      run: |
        cd zenn-private-preview
        bun install

    # ビルド
    # 1. Privateリポジトリ
    - if: github.event.repository.private == true
      name: Privateリポジトリ設定でプレビューページをビルド
      shell: bash
      env:
        ZENN_DIR: ..
      run: |
        cd zenn-private-preview
        bun run build

    # 2. Publicリポジトリ
    - if: github.event.repository.private == false
      name: Publicリポジトリ設定でプレビューページをビルド
      shell: bash
      env:
        ZENN_DIR: ..
        ZENN_GITHUB_REPOSITORY_URL: ${{ github.event.repository.url }}
      run: |
        cd zenn-private-preview
        bun run build

    # デプロイ
    # 1. Basic認証なし
    - if: ${{ inputs.enable-basic-auth == 'false' }}
      id: deploy-disabled-basic-auth
      name: Basic認証なしでプレビューページをデプロイ
      uses: cloudflare/wrangler-action@v3
      with:
        accountId: ${{ inputs.cloudflare-account-id }}
        apiToken: ${{ inputs.cloudflare-api-token }}
        workingDirectory: zenn-private-preview/dist
        command: pages deploy . --project-name ${{ inputs.cloudflare-project-name }} --commit-dirty=true

    - if: ${{ inputs.enable-basic-auth == 'false' }}
      name: プレビューページのURLを出力
      shell: bash
      run: 'echo "deployment-url=${{ steps.deploy-disabled-basic-auth.outputs.deployment-url }}" >> $GITHUB_OUTPUT'

    # 2. Basic認証あり
    - if: ${{ inputs.enable-basic-auth == 'true' && inputs.basic-auth-username != '' && inputs.basic-auth-password != '' }}
      name: Basic認証のシークレットを設定
      uses: cloudflare/wrangler-action@v3
      env:
        BASIC_AUTH_USERNAME: ${{ inputs.basic-auth-username }}
        BASIC_AUTH_PASSWORD: ${{ inputs.basic-auth-password }}
      with:
        accountId: ${{ inputs.cloudflare-account-id }}
        apiToken: ${{ inputs.cloudflare-api-token }}
        workingDirectory: zenn-private-preview
        preCommands: |
          SECRET_BULK="{ \"BASIC_AUTH_USERNAME\": \"${BASIC_AUTH_USERNAME}\", \"BASIC_AUTH_PASSWORD\": \"${BASIC_AUTH_PASSWORD}\" }"
        command: pages secret bulk --project-name ${{ inputs.cloudflare-project-name }} ${SECRET_BULK}

    - if: ${{ inputs.enable-basic-auth == 'true' }}
      id: deploy-enabled-basic-auth
      name: Basic認証付きでプレビューページをデプロイ
      uses: cloudflare/wrangler-action@v3
      with:
        accountId: ${{ inputs.cloudflare-account-id }}
        apiToken: ${{ inputs.cloudflare-api-token }}
        workingDirectory: zenn-private-preview
        command: pages deploy ./dist --project-name ${{ inputs.cloudflare-project-name }} --commit-dirty=true

    - if: ${{ inputs.enable-basic-auth == 'true' }}
      name: プレビューページのURLを出力
      shell: bash
      run: 'echo "deployment-url=${{ steps.deploy-enabled-basic-auth.outputs.deployment-url }}" >> $GITHUB_OUTPUT'

    - id: echo-outputs
      name: outputsを出力
      shell: bash
      run: |
        DEPLOYMENT_URL_DISABLED_BASIC_AUTH=${{ steps.deploy-disabled-basic-auth.outputs.deployment-url }}
        DEPLOYMENT_URL_ENABLED_BASIC_AUTH=${{ steps.deploy-enabled-basic-auth.outputs.deployment-url }}
        if [ -n "$DEPLOYMENT_URL_DISABLED_BASIC_AUTH" ]; then
          echo "deployment-url=${DEPLOYMENT_URL_DISABLED_BASIC_AUTH}" >> $GITHUB_OUTPUT
        else
          echo "deployment-url=${DEPLOYMENT_URL_ENABLED_BASIC_AUTH}" >> $GITHUB_OUTPUT
        fi
